package clock;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Francesco
 */


import java.awt.*;
import java.awt.event.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.Calendar;
import java.util.Date;
import java.util.Properties;
import java.util.TimeZone;
import java.util.logging.Level;
import java.util.logging.Logger;

public class MenuPane extends javax.swing.JFrame {
    private javax.swing.Timer timer;
    private Configuration config;
    private final WindowMaker wm;
    
    public MenuPane() { 
        try {
            config = new Configuration();
        } catch (Exception ex) {
            Logger.getLogger(MenuPane.class.getName()).log(Level.SEVERE, null, ex);
        }
        wm = new WindowMaker();
        
        initComponents();
      
    }

    private Properties getProperties() {
       return config.loadConfig();
    }
    
    private String getUsername(){
        //Restituisce un object, serve il tostring per convertirlo a stringa
        return getProperties().get("username").toString();
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        timingPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        desc_currEstClock1 = new javax.swing.JLabel();
        curr_Time1 = new javax.swing.JLabel();
        timeWindowPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        calculateWindow = new java.awt.Button();
        windowTextField = new javax.swing.JTextField();
        lastcheckedHour = new javax.swing.JTextField();
        idocCheckbox = new javax.swing.JCheckBox();
        clockPanel = new javax.swing.JPanel();
        ButtonPanel = new javax.swing.JPanel();
        greatlyWorn = new java.awt.Button();
        fairlyWorn = new java.awt.Button();
        idocMaxWindow = new java.awt.Button();
        jLabel3 = new javax.swing.JLabel();
        TimerPanel = new javax.swing.JPanel();
        desc_currEstClock = new javax.swing.JLabel();
        curr_Time = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        settingsTab = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        lab_username = new javax.swing.JLabel();
        SaveButton = new java.awt.Button();
        username = new javax.swing.JTextField();
        about = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        textArea1 = new java.awt.TextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 204));

        jTabbedPane3.setBackground(new java.awt.Color(153, 153, 153));

        timingPanel.setForeground(new java.awt.Color(60, 63, 65));

        desc_currEstClock1.setBackground(new java.awt.Color(204, 204, 204));
        desc_currEstClock1.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        desc_currEstClock1.setText("EST Time:");
        desc_currEstClock1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        desc_currEstClock1.setName(""); // NOI18N

        curr_Time1.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(desc_currEstClock1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(curr_Time1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(14, 14, 14))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(desc_currEstClock1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(curr_Time1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ///////REFACTOR NEEDED - serve un metodo per sost il timer new sotto
        timer = new javax.swing.Timer(1000, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                Calendar now = getCalendar();
                int h = now.get(Calendar.HOUR_OF_DAY);
                int m = now.get(Calendar.MINUTE);

                int s = now.get(Calendar.SECOND);
                curr_Time1.setText("" + h + ":" + m + ":" + s);
            }
        });
        timer.start();

        timeWindowPanel.setBackground(new java.awt.Color(102, 102, 102));

        jLabel1.setText("Last time checked:");

        jLabel2.setText("Window generated:");

        calculateWindow.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        calculateWindow.setLabel("Calculate Window");
        calculateWindow.setName(""); // NOI18N
        calculateWindow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateWindowActionPerformed(evt);
            }
        });

        windowTextField.setToolTipText("");
        windowTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                windowTextFieldActionPerformed(evt);
            }
        });

        lastcheckedHour.setToolTipText("");
        lastcheckedHour.setUI(new HintTextFieldUI("hh:mm (24h)", true));
        lastcheckedHour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastcheckedHourActionPerformed(evt);
            }
        });

        idocCheckbox.setText("IDOC");

        javax.swing.GroupLayout timeWindowPanelLayout = new javax.swing.GroupLayout(timeWindowPanel);
        timeWindowPanel.setLayout(timeWindowPanelLayout);
        timeWindowPanelLayout.setHorizontalGroup(
            timeWindowPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(timeWindowPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(timeWindowPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(timeWindowPanelLayout.createSequentialGroup()
                        .addComponent(calculateWindow, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(idocCheckbox)
                        .addGap(178, 178, 178))
                    .addGroup(timeWindowPanelLayout.createSequentialGroup()
                        .addGroup(timeWindowPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lastcheckedHour))
                        .addGap(118, 118, 118)
                        .addGroup(timeWindowPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(windowTextField)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, timeWindowPanelLayout.createSequentialGroup()
                                .addGap(0, 64, Short.MAX_VALUE)
                                .addComponent(jLabel2)
                                .addGap(51, 51, 51)))
                        .addContainerGap())))
        );
        timeWindowPanelLayout.setVerticalGroup(
            timeWindowPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(timeWindowPanelLayout.createSequentialGroup()
                .addGroup(timeWindowPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(timeWindowPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(windowTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastcheckedHour, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(timeWindowPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(calculateWindow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idocCheckbox))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout timingPanelLayout = new javax.swing.GroupLayout(timingPanel);
        timingPanel.setLayout(timingPanelLayout);
        timingPanelLayout.setHorizontalGroup(
            timingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(timingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(timingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(timeWindowPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        timingPanelLayout.setVerticalGroup(
            timingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(timingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(timeWindowPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(71, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Checking", timingPanel);

        ButtonPanel.setBackground(new java.awt.Color(204, 204, 204));

        greatlyWorn.setBackground(new java.awt.Color(0, 102, 102));
        greatlyWorn.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        greatlyWorn.setLabel("GW");
        greatlyWorn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                greatlyWornActionPerformed(evt);
            }
        });

        fairlyWorn.setBackground(new java.awt.Color(51, 102, 255));
        fairlyWorn.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        fairlyWorn.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        fairlyWorn.setLabel("FW");
        fairlyWorn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fairlyWornActionPerformed(evt);
            }
        });

        idocMaxWindow.setBackground(new java.awt.Color(255, 51, 102));
        idocMaxWindow.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        idocMaxWindow.setLabel("IDOC");
        idocMaxWindow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idocMaxWindowActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Sector Run");

        javax.swing.GroupLayout ButtonPanelLayout = new javax.swing.GroupLayout(ButtonPanel);
        ButtonPanel.setLayout(ButtonPanelLayout);
        ButtonPanelLayout.setHorizontalGroup(
            ButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ButtonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ButtonPanelLayout.createSequentialGroup()
                        .addComponent(fairlyWorn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(greatlyWorn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(idocMaxWindow, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ButtonPanelLayout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24))))
        );
        ButtonPanelLayout.setVerticalGroup(
            ButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ButtonPanelLayout.createSequentialGroup()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ButtonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(idocMaxWindow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(greatlyWorn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fairlyWorn, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        desc_currEstClock.setBackground(new java.awt.Color(204, 204, 204));
        desc_currEstClock.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        desc_currEstClock.setText("EST Time:");
        desc_currEstClock.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        desc_currEstClock.setName(""); // NOI18N

        curr_Time.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N

        jButton1.setText("Current Time");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TimerPanelLayout = new javax.swing.GroupLayout(TimerPanel);
        TimerPanel.setLayout(TimerPanelLayout);
        TimerPanelLayout.setHorizontalGroup(
            TimerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TimerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(desc_currEstClock)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(curr_Time, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(TimerPanelLayout.createSequentialGroup()
                .addComponent(jButton1)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        TimerPanelLayout.setVerticalGroup(
            TimerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TimerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TimerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(desc_currEstClock, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(curr_Time, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        ///////REFACTOR NEEDED - serve un metodo per sost il timer new sotto
        timer = new javax.swing.Timer(1000, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                Calendar now = getCalendar();
                int h = now.get(Calendar.HOUR_OF_DAY);
                int m = now.get(Calendar.MINUTE);

                int s = now.get(Calendar.SECOND);
                curr_Time.setText("" + h + ":" + m + ":" + s);
            }
        });
        timer.start();

        javax.swing.GroupLayout clockPanelLayout = new javax.swing.GroupLayout(clockPanel);
        clockPanel.setLayout(clockPanelLayout);
        clockPanelLayout.setHorizontalGroup(
            clockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(clockPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(clockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TimerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(clockPanelLayout.createSequentialGroup()
                        .addComponent(ButtonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        clockPanelLayout.setVerticalGroup(
            clockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(clockPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TimerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(ButtonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Book Checking", clockPanel);

        lab_username.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lab_username.setText("Current User");

        SaveButton.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        SaveButton.setLabel("Save");
        SaveButton.setName("Save"); // NOI18N
        SaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveButtonActionPerformed(evt);
            }
        });

        /*
        username.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        username.setText(null);
        */
        username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(SaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lab_username))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lab_username)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(SaveButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(78, Short.MAX_VALUE))
        );

        // TODO add your handling code here:
        /*
        *Load da file (l'utente si chiama default)
        *Set text current user
        **/
        username.setText(getUsername());

        javax.swing.GroupLayout settingsTabLayout = new javax.swing.GroupLayout(settingsTab);
        settingsTab.setLayout(settingsTabLayout);
        settingsTabLayout.setHorizontalGroup(
            settingsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settingsTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(292, Short.MAX_VALUE))
        );
        settingsTabLayout.setVerticalGroup(
            settingsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settingsTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(153, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Settings", settingsTab);

        jLabel4.setText("Author: Ray-Fox");

        textArea1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        textArea1.setEditable(false);
        textArea1.setName(""); // NOI18N
        textArea1.setText(aboutText());

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textArea1, javax.swing.GroupLayout.DEFAULT_SIZE, 447, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textArea1, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout aboutLayout = new javax.swing.GroupLayout(about);
        about.setLayout(aboutLayout);
        aboutLayout.setHorizontalGroup(
            aboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aboutLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        aboutLayout.setVerticalGroup(
            aboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aboutLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane3.addTab("About", about);

        jMenu1.setText("Settings");

        jCheckBoxMenuItem1.setText("Disable Macro Hotkey");
        jCheckBoxMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jCheckBoxMenuItem1);

        jMenuItem1.setText("Exit");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane3, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane3)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public String idocWindow() {
        //return "" + getCalendar().get(Calendar.HOUR) + 6;
        return wm.idocWindow();
    }
    
    public String greatlyWindow(){
        return wm.greatlyWindow();
    }
    
    
    private String currDay(){
        Calendar cal = getCalendar();
     return "" + cal.get(Calendar.DAY_OF_MONTH) + "-";
    }
    
    private String currTime(){         
        Calendar est = getCalendar();
        int h = est.get(Calendar.HOUR);  //hour 12h - HOUR_OF_DAY 24h
       
        String fascia;
        int ampm = est.get(Calendar.AM_PM);
        if (ampm == 1) //pm
        {
            fascia = "pm";
        } else {
            //am
            fascia = "am";
        }

       return "" + h + getMinutes(est) + fascia;
    }

    private String getMinutes(Calendar est) {
        int m = est.get(Calendar.MINUTE);
        String minuti;
        if (m < 10) {
            minuti = "0" + m;
        } else {
            minuti = Integer.toString(m);
        }
        return minuti;
    }

    private Calendar getCalendar() {
        TimeZone tz1 = TimeZone.getTimeZone("US/Eastern");
        Calendar est = Calendar.getInstance(tz1); // Calendar.getInstance();
        return est;
    }
     private String fairlyWornTime(String user){
      return  "fw" + currDay() + currTime() +"."+ user;
    }
    private String greatlyWornTime(String user){
      return  "gw" + currDay() + currTime() +"."+ user;
    }
    
    private String aboutText(){
        String s = "DISCLAIMER:\n\n"
                + "This tool has been designed\n "
                + "as an assistant in Book Checking operations.\n\n"
                + "Please report any bug or question to Ray-Fox\n"
                + "#2750\n\n"
                + "THIS SOFTWARE IS PROVIDED \"AS IS\" AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n"
                + " FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS OR\n CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n"
                + " OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n"
                + "HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,\n STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE \n"
                + "USE OF THIS SOFTWARE,"
                + " EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.";
        return s;
    }
    
    public static void writeKeyboard(String keys) throws AWTException {
        Robot robot = new Robot();
        robot.delay(100);        
        for (char c : keys.toCharArray()) {
        int keyCode = KeyEvent.getExtendedKeyCodeForChar(c);
        if (KeyEvent.CHAR_UNDEFINED == keyCode) {
            throw new RuntimeException(
                "Key code not found for character '" + c + "'");
        }
        robot.keyPress(keyCode);
        robot.delay(70);
        robot.keyRelease(keyCode);
        robot.delay(70);
    }
}
    
public void alt_tab() throws AWTException {
    Robot robot = new Robot();
    robot.keyPress(KeyEvent.VK_ALT);
    robot.keyPress(KeyEvent.VK_TAB);
    robot.delay(100);
    robot.keyRelease(KeyEvent.VK_TAB);
    robot.keyRelease(KeyEvent.VK_ALT);
}    
    
 
    private void jCheckBoxMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem1ActionPerformed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_jCheckBoxMenuItem1ActionPerformed

    private void idocMaxWindowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idocMaxWindowActionPerformed
        // TODO add your handling code here:
        try {
            alt_tab();
            String idoc = wm.idocWindow() + " max" + wm.printDate();
            writeKeyboard(idoc);
        } catch (AWTException ex) {
            Logger.getLogger(MenuPane.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_idocMaxWindowActionPerformed

    private void fairlyWornActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fairlyWornActionPerformed
        try {
            alt_tab();
            String fw = fairlyWornTime(getUsername());
            writeKeyboard(fw);
        } catch (AWTException ex) {
            Logger.getLogger(MenuPane.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_fairlyWornActionPerformed

    private void greatlyWornActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_greatlyWornActionPerformed
        try {
            // TODO add your handling code here:
            alt_tab();
            String gw = greatlyWornTime(getUsername());
            writeKeyboard(gw);
        } catch (AWTException ex) {
            Logger.getLogger(MenuPane.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_greatlyWornActionPerformed

    private void SaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveButtonActionPerformed
        // TODO add your handling code here:
        //Save username from textbox
        config.saveConfig(username.getText());
    }//GEN-LAST:event_SaveButtonActionPerformed

    private void usernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameActionPerformed
        // TODO add your handling code here:
        /*
        *Load da file (l'utente si chiama default)
        *Set text current user
        **/
        // username.setText("default"));

    }//GEN-LAST:event_usernameActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
         System.exit(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void windowTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_windowTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_windowTextFieldActionPerformed
    private Calendar convertTextToTime() {
  
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("H:m");
        LocalDate date = LocalDate.now();

        String tempo = lastcheckedHour.getText();

        LocalTime time = LocalTime.parse(tempo, formatter);

        Calendar c = Calendar.getInstance();
        c.set(Calendar.HOUR_OF_DAY, time.getHour());
        c.set(Calendar.MINUTE, time.getMinute());

        System.out.println(time.toString());

        return c;

 /*
            lastcheckedHour.setText("Invalid time");
            return getCalendar();
            
*/


    }


    private void calculateWindowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateWindowActionPerformed

        //prendere il contenuto di HH e MM
        //assegnarlo ad un calendario

        //branch: IDOC: spostare le ore di 6
        //        GW: spostare i giorni di 6
        /*restituire la window in formato: 
        *IDOC:  lastchecked + 6 - currentchecked + 6 
        *GW:    lastchecked - currentchecked - giorni+6 
         */
       
       // int last_ore = Integer.parseInt(lastcheckedHour.getText());
        
       Calendar cal = convertTextToTime();
        WindowMaker window = new WindowMaker(cal);
        
        String current =wm.forwardSixHours() ;

        
        if (idocCheckbox.isSelected()) {
           windowTextField.setText( window.idocWindow() + "-" +current +" "+ wm.printDate());
        }
        else
            windowTextField.setText(window.greatlyWindow()+ "-" + current);
    }//GEN-LAST:event_calculateWindowActionPerformed

    
   
    
    private void lastcheckedHourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastcheckedHourActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lastcheckedHourActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String s = currTime() + " " +wm.getMonth() + "-" +wm.getDay()  + "." + getUsername();
        try {
            alt_tab();
            writeKeyboard(s);
        } catch (AWTException ex) {
           
        }
  
                
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuPane.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuPane.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuPane.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuPane.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new MenuPane().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ButtonPanel;
    private java.awt.Button SaveButton;
    private javax.swing.JPanel TimerPanel;
    private javax.swing.JPanel about;
    private java.awt.Button calculateWindow;
    private javax.swing.JPanel clockPanel;
    private javax.swing.JLabel curr_Time;
    private javax.swing.JLabel curr_Time1;
    private javax.swing.JLabel desc_currEstClock;
    private javax.swing.JLabel desc_currEstClock1;
    private java.awt.Button fairlyWorn;
    private java.awt.Button greatlyWorn;
    private javax.swing.JCheckBox idocCheckbox;
    private java.awt.Button idocMaxWindow;
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JLabel lab_username;
    private javax.swing.JTextField lastcheckedHour;
    private javax.swing.JPanel settingsTab;
    private java.awt.TextArea textArea1;
    private javax.swing.JPanel timeWindowPanel;
    private javax.swing.JPanel timingPanel;
    private javax.swing.JTextField username;
    private javax.swing.JTextField windowTextField;
    // End of variables declaration//GEN-END:variables








}